<UserControl x:Class="A24_Stroka.Views.MainPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:vm="clr-namespace:A24_Stroka.ViewModels"
             xmlns:local="clr-namespace:A24_Stroka.Views" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000" DataContext="{DynamicResource mainPVM}">
    <d:UserControl.DataContext>
        <vm:MainPageViewModel/>
    </d:UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="130"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="640"/>
            </Grid.ColumnDefinitions>

        </Grid>
        <DataGrid Grid.Row="1" Grid.Column="1" Background="White" Margin="10 10 10 0" SelectionMode="Single"  
                  IsReadOnly="False" VerticalContentAlignment="Center"  SelectedIndex="{Binding DGSelectedIndex}"
                  CanUserAddRows="False" AutoGeneratingColumn="DataGrid_AutoGeneratingColumn" 
                  ItemsSource="{Binding NewsList, Mode=TwoWay}" AutoGenerateColumns="False"
                  EnableRowVirtualization ="True"
                  EnableColumnVirtualization="True"
                  VirtualizingPanel.VirtualizationMode="Standard"
                  >
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="FontFamily" Value="Times New Roman"/>
                    <Setter Property="FontSize" Value="14"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!--<DataGridCheckBoxColumn ElementStyle="{StaticResource CheckBoxBase}" Header="В работе" MinWidth="80" ClipboardContentBinding="{x:Null}" Binding="{Binding In_Work, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>-->
                <DataGridTemplateColumn MinWidth="80" Header="В работе">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox Style="{StaticResource CheckBoxBase}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                      IsChecked="{Binding Item.In_Work, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                      Command="{Binding CheckUncheck, Source={StaticResource mainPVM}}" CommandParameter="{Binding}">
                               
                                <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="IsChecked" >
                                        <i:InvokeCommandAction Command="{Binding CheckUncheck, Source={StaticResource mainPVM}}" CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Текст" IsReadOnly="True" MinWidth="110" Width="*" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontFamily" Value="Times New Roman" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Margin" Value="10 0"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FFAAB7F0" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FFAAB7F0" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FFCBD2F0"/>
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FFAAB7F0" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FFAAB7F0" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding View}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                    Path=IsSelected}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FFCBD2F0"/>
                                <Setter Property="Foreground" Value="Black" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </Grid>
</UserControl>
